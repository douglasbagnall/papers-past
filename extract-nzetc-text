#!/usr/bin/python

import sys
import os
from alphabet import normalise_text

DEST_DIR = os.path.join(os.path.dirname(__file__), 'books/all')
XMLNS = '{http://www.w3.org/XML/1998/namespace}'
TEINS = '{http://www.tei-c.org/ns/1.0}'


def ns(s):
    return s.format(xml=XMLNS, tei=TEINS)

try:
    from lxml import etree as ET
except ImportError:
    print >> sys.stderr, "using xml.etree.ElementTree. Install lxml for speed."
    import xml.etree.ElementTree as ET


def get_metadata(tree, path):
    el = tree.find(ns(path))
    if el is None:
        return "<unknown>"
    return normalise_text(ET.tostring(el, method='text', encoding='utf8'),
                          collapse_whitespace=1, real_caps=True,
                          real_numbers=True)


def extract_body_and_header(fn):
    tree = ET.parse(fn)
    doc = []
    for tag in ('table', 'note'):
        for el in tree.findall(ns('.//{tei}p//{tei}%s' % tag)):
            el.clear()

    for p in tree.findall(ns('.//{tei}body//{tei}p')):
        para = ET.tostring(p, method='text', encoding='utf8').strip()
        doc.append(normalise_text(para, collapse_whitespace=1))

    body = normalise_text('\n\n'.join(doc), collapse_whitespace=2)

    title = get_metadata(tree, ".//{tei}name[@type='work']")
    date = get_metadata(tree, './/{tei}sourceDesc//{tei}date[@when]')
    author = get_metadata(tree, './/{tei}sourceDesc//{tei}author')

    id = tree.getroot().attrib.get(ns('{xml}id'))

    header = "title: %s\nauthor: %s\nid: %s\ndate: %s\n" % (title, author,
                                                            id, date)
    print >> sys.stderr, header
    return header, body, id


def write_clean_version(srcfn, destfn=None):
    header, body, id = extract_body_and_header(srcfn)
    if destfn is None:
        destfn = os.path.join(DEST_DIR, id)
    f = open(destfn, 'w')
    print >> f, header
    print >> f, body
    f.close()


def main():
    for book in sys.argv[1:]:
        write_clean_version(book)

main()
